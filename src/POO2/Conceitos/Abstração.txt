Abstração é um dos pilares da programação orientada a objetos.
Ela consiste em esconder os detalhes complexos de implementação e expor apenas as funcionalidades essenciais.

Em outras palavras, abstrair é focar no “o que” e não no “como”.

✅ Benefícios da abstração:
Reduz a complexidade

Facilita a manutenção

Garante foco na funcionalidade principal

Permite trabalhar com conceitos mais genéricos e reutilizáveis

// Classe abstrata
public abstract class Funcionario {

    protected String nome;

    public Funcionario(String nome) {
        this.nome = nome;
    }

    // Método abstrato (sem implementação aqui)
    public abstract double calcularSalario();

    public String getNome() {
        return nome;
    }
}

// Subclasse concreta que implementa o método abstrato
public class Desenvolvedor extends Funcionario {

    private double salarioMensal;

    public Desenvolvedor(String nome, double salarioMensal) {
        super(nome);
        this.salarioMensal = salarioMensal;
    }

    @Override
    public double calcularSalario() {
        return salarioMensal;
    }
}

// Uso da abstração
public class Main {
    public static void main(String[] args) {
        Funcionario dev = new Desenvolvedor("João", 5000.0);

        System.out.println("Nome: " + dev.getNome());
        System.out.println("Salário: R$ " + dev.calcularSalario());
    }
}
