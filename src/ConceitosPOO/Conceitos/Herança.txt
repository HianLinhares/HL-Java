üß¨ Heran√ßa
Heran√ßa √© um princ√≠pio da programa√ß√£o orientada a objetos que permite reutilizar c√≥digo.
Com ela, uma classe filha (ou subclasse) pode herdar atributos e m√©todos de uma classe pai (ou superclasse).

‚úÖ Benef√≠cios:
Reutiliza√ß√£o de c√≥digo

Organiza√ß√£o e hierarquia

Facilidade de manuten√ß√£o

Em resumo: heran√ßa √© "herdar" comportamentos para evitar repetir c√≥digo.



// Classe base (superclasse)
public class Animal {
    protected String nome;

    public Animal(String nome) {
        this.nome = nome;
    }

    public void emitirSom() {
        System.out.println("Som gen√©rico de animal");
    }
}

// Classe derivada (subclasse)
public class Cachorro extends Animal {

    public Cachorro(String nome) {
        super(nome); // Chama o construtor da superclasse
    }

    // Sobrescrita do m√©todo da superclasse
    @Override
    public void emitirSom() {
        System.out.println("Au au!");
    }
}

// Classe principal
public class Main {
    public static void main(String[] args) {
        Cachorro dog = new Cachorro("Rex");

        System.out.println("Nome: " + dog.nome);
        dog.emitirSom(); // Sa√≠da: Au au!
    }
}

A classe Cachorro herda o atributo nome e o m√©todo emitirSom() da classe Animal.

Ela tamb√©m pode sobrescrever m√©todos, como foi feito com emitirSom().